name: Validate Cloudformation on PR

on:
  pull_request:
    paths:
      - 'cloudformation/**'

permissions:
  pull-requests: write  # Fixed permission name
  contents: read

jobs:
  validate-cfn:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  # Updated version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4  # Updated version
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Validate Cloudformation template
        run: |
          aws cloudformation validate-template \
            --template-body file://cloudformation/s3-bucket.yml || exit 1

      - name: Deploy our stack
        run: |
          stack_name="pr-test-stack-${{github.event.pull_request.number}}"
          aws cloudformation create-stack \
            --stack-name "$stack_name" \
            --template-body file://cloudformation/s3-bucket.yml \
            --parameters ParameterKey=Environment,ParameterValue=test \
            --no-cli-pager || exit 1
          
          # Wait for stack creation to complete
          aws cloudformation wait stack-create-complete \
            --stack-name "$stack_name" || exit 1

      - name: comment on PR
        uses: actions/github-script@v6  # Fixed version number
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |  # Fixed typo 'scripts' to 'script'
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Cloudformation test stack deployed. Stack name: pr-test-stack-${context.issue.number}`
            })

  cleanup-on-merge:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4  # Updated version
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Delete our stack
        run: |
          stack_name="pr-test-stack-${{github.event.pull_request.number}}"
          aws cloudformation delete-stack --stack-name "$stack_name" || exit 1
          
          # Wait for stack deletion to complete
          aws cloudformation wait stack-delete-complete \
            --stack-name "$stack_name" || exit 1
